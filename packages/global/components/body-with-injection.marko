import { getAsArray } from "@mindful-web/object-path";
import defaultValue from "@mindful-web/marko-core/utils/default-value";
import MarkoWebContentBody from "@mindful-web/marko-web/components/element/content/body";
import GAMDefineDisplayAd from "@mindful-web/marko-web-theme-monorail/components/gam/define-display-ad";

$ const { global: $global } = out;
$ const { GAM } = $global;
$ const { content, modifiers } = input;
$ const preventHTMLInjection = getAsArray(content, "labels").some( l => ["Sponsored", "Product Spotlight"].indexOf(l) >= 0) || input.preventHTMLInjection;
$ const blockName = defaultValue(input.blockName, 'page-contents');
$ const aliases = getAsArray(input, 'aliases');
$ const selector = defaultValue(input.selector, `content-body-${content.id}`);

<!-- Desktop Inline Ad props -->
$ const desktopAdCounts = defaultValue(input.desktopAdCounts, [1500, 2750, 4500, 6250, 8000, 9750, 11500, 13250, 15000, 16750, 18500]);
$ const desktopAdName = defaultValue(input.desktopAdName, "inline-content-desktop");
$ const desktopAdModifiers = defaultValue(input.desktopAdModifiers, ["margin-auto-x",  "inline-content", "inline-content-desktop"]);
$ const desktopAdDataPropToPreventDupes = defaultValue(input.desktopAdDataPropToPreventDupes, "gamTemplateName");

<!-- Desktop Leaderboard Ad props -->
$ const desktopLeaderboardAdCounts = defaultValue(input.desktopLeaderboardAdCounts, [350]);
$ const desktopLeaderboardAdName = defaultValue(input.desktopLeaderboardAdName, desktopAdName);
$ const desktopLeaderboardAdModifiers = defaultValue(input.desktopLeaderboardAdModifiers, desktopAdModifiers);
$ const desktopLeaderboardAdDataPropToPreventDupes = defaultValue(input.desktopLeaderboardAdDataPropToPreventDupes, desktopAdDataPropToPreventDupes);

<!-- Mobile Inline Ad props -->
$ const mobileAdCounts = defaultValue(input.mobileAdCounts, [900, 1650, 2950, 4250, 5550, 6850, 8150, 9450, 10750, 12050, 13350, 14650, 15950, 17250]);
$ const mobileAdName = defaultValue(input.mobileAdName, "inline-content-mobile");
$ const mobileAdModifiers = defaultValue(input.mobileAdModifiers, ["margin-auto-x",  "inline-content", "inline-content-mobile"]);
$ const mobileAdDataPropToPreventDupes = defaultValue(input.mobileAdDataPropToPreventDupes, "gamTemplateName");

<!-- Mobile Leaderboard Ad props || fallback set to 250 & mobileAdProps -->
$ const mobileLeaderboardAdCounts = defaultValue(input.mobileLeaderboardAdCounts, [250]);
$ const mobileLeaderboardAdName = defaultValue(input.mobileLeaderboardAdName, mobileAdName);
$ const mobileLeaderboardAdModifiers = defaultValue(input.mobileLeaderboardAdModifiers, mobileAdModifiers);
$ const mobileLeaderboardAdDataPropToPreventDupes = defaultValue(input.mobileLeaderboarAdDataPropToPreventDupes, mobileAdDataPropToPreventDupes);

<!-- Only set GAM defaults if GAM is present on out.global -->
$ const gamAdInjection = (GAM) ? [
  {
    counts: desktopLeaderboardAdCounts,
    name: desktopLeaderboardAdName,
    modifiers: desktopLeaderboardAdModifiers,
    dataPropToPreventDupes: desktopLeaderboardAdDataPropToPreventDupes
  },
  {
    counts: desktopAdCounts,
    name: desktopAdName,
    modifiers: desktopAdModifiers,
    dataPropToPreventDupes: desktopAdDataPropToPreventDupes
  },
  {
    counts: mobileLeaderboardAdCounts,
    name: mobileLeaderboardAdName,
    modifiers: mobileLeaderboardAdModifiers,
    dataPropToPreventDupes: mobileLeaderboardAdDataPropToPreventDupes
  },
  {
    counts: mobileAdCounts,
    name: mobileAdName,
    modifiers: mobileAdModifiers,
    dataPropToPreventDupes: mobileAdDataPropToPreventDupes
  }
] : [];


<theme-ssr-html-inject
  to-render=MarkoWebContentBody
  selector=`#${selector}`
>
  <@component-input
    block-name=blockName
    modifiers=modifiers
    obj=content
    attrs={ id: selector }
    embed-options=input.embedOptions
    lazyload-first-image=input.lazyloadFirstImage
  />
  <if(!preventHTMLInjection)>
    <for|adInjection| of=gamAdInjection>
      $ const { counts, name, modifiers } = adInjection;
      <if(adInjection.counts.length)>
        <for|count| of=adInjection.counts>
          <@inject
            at=count
            html=GAMDefineDisplayAd.renderToString({
              name,
              aliases,
              modifiers,
              $global
            })
            dataPropToPreventDupes=adInjection.dataPropToPreventDupes
          />
        </for>
      </if>
    </for>
  </if>
</theme-ssr-html-inject>
