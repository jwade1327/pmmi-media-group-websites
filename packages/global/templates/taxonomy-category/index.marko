import hierarchyAliases from "@mindful-web/marko-web/utils/hierarchy-aliases";
import convertAdToNode from "@mindful-web/marko-web-native-x/utils/convert-ad-to-node";
import { getAsArray } from "@mindful-web/object-path";
import queryFragment from "@mindful-web/marko-web-theme-monorail/graphql/fragments/section-feed-block";

$ const { id, name, type, description, leadersSectionIds } = input;
$ const {
    site,
    GAM,
    req,
    i18n,
    nativeX: nxConfig,
    pagination: p
  } = out.global;
$ const perPage = 12;
$ const continueLabel = i18n("Sign Me Up!");
$ const loginEmailLabel = i18n("Work Email");
$ const actionText = i18n("signing up to receive your email notifications");
$ const buttonLabels = { continue: continueLabel };

$ const queryParams = {
  limit: perPage,
  skip: p.skip({ perPage }),
  includeTaxonomyIds: [id],
  queryFragment,
};

<marko-web-default-page-layout type="taxonomy" title=`${type}: ${name}` description=description>
  <@page>
    <marko-web-page-wrapper>
      <@section modifiers=["first"]>
        <theme-gam-define-display-ad
          name="leaderboard"
          position="section_page"
          modifiers=["inter-block"]
        />
      </@section>

      <@section|{ blockName }|>
        <div class="row">
          <div class="col-lg-8">
            $ const pinnedParams = {
              limit: 1,
              skip: 0,
              includeTaxonomyIds: [id],
              includeLabels: ['Taxonomy Introduction'],
              queryFragment,
            }
            <marko-web-query|{ nodes }| name="all-published-content" params=pinnedParams>
              $ const pinnedNode = nodes.slice(0, 1)[0] || {};
              $ const { id, type, siteContext, primaryImage } = pinnedNode;
              $ const pinnedImageNode = {
                id,
                type,
                siteContext,
                primaryImage
              };
              <marko-web-element block-name="top-stories" name="row">
                <marko-web-element block-name="top-stories" name="col" modifiers=["hero"]>
                  <theme-content-node
                    image-position="top"
                    card=true
                    flush=true
                    image-only=true
                    modifiers=["top-stories-hero-image"]
                    node=pinnedImageNode
                  >
                    <@image fluid=true width=600 ar="3:2" lazyload=false />
                  </theme-content-node>
                </marko-web-element>
                <marko-web-element block-name="top-stories" name="col" modifiers=["list"]>
                  <theme-content-node
                    full-height=true
                    card=true
                    display-image=false
                    flush=true
                    modifiers=["top-stories-hero"]
                    node=pinnedNode
                  />
                </marko-web-element>
              </marko-web-element>
            </marko-web-query>
            <marko-web-website-section-name|{ value }| tag="h1" block-name=blockName obj={ name }>
              <if(p.page > 1)>$!{value}: ${i18n("Page")} ${p.page}</if>
              <else>$!{value}</else>
            </marko-web-website-section-name>
            <marko-web-query|{ nodes }| name="all-published-content" params=queryParams>
              <marko-web-node-list
                flush-x=true
                flush-y=false
                modifiers=["section-feed"]
              >
                <@nodes nodes=nodes>
                  <@slot|{ node }|>
                    <theme-section-feed-content-node node=node />
                  </@slot>
                </@nodes>
              </marko-web-node-list>
            </marko-web-query>
            <theme-query-total-count|{ totalCount }| name="all-published-content" params={ includeTaxonomyIds: [id] }>
              <theme-pagination-controls
                per-page=perPage
                total-count=totalCount
                path=req.path
              />
            </theme-query-total-count>
          </div>
          <div class="col-lg-4">
            <marko-web-identity-x-context|{ hasUser }|>
              <if(!hasUser)>
                <identity-x-newsletter-form-inline
                  button-labels=buttonLabels
                  login-email-label=loginEmailLabel
                  login-email-placeholder=i18n("example@yourcompany.com")
                  type="inlineSection"
                  action-text=actionText
                  with-image=false
                />
              </if>
            </marko-web-identity-x-context>
            <div class="node-list native-x-list node-list--flush-x py-3" >
            $ const uri = nxConfig.getUri();
            $ const placementName = `${name.toLowerCase().replace(/ /g, '-').replace(/\//g, '-').replace(/\(.+\)/, '').replace(/-$/, '')}`;
            $ const placement = nxConfig.getPlacement({
              name: `super-category-${placementName}`,
            });
            <marko-web-native-x-fetch-elements|{ ads }| uri=uri id=placement.id opts={ n: 1 }>
              $ const hasAd = ads && ads.length && ads[0] && ads[0].hasCampaign;
              $ const sectionName = `${i18n("Sponsor Content")}`;
              <if(hasAd)>
                <div class="node-list__node">
                  <theme-content-node
                    with-teaser=false
                    image-position="right"
                    with-section=true
                    with-dates=false
                    image={ lazyload: true, width: 100, height: 67, ar: "3:2" }
                    ...convertAdToNode(ads[0], { sectionName })
                  />
                </div>
              </if>
            </marko-web-native-x-fetch-elements>
            </div>
            <if(site.get("leaders.enabled"))>
              <global-leaders-taxonomy-page section-ids=leadersSectionIds />
            </if>
            <theme-gam-define-display-ad
              name="inline-content"
              position="section_page"
            />
          </div>
        </div>
      </@section>

      <@section>
        <theme-gam-define-display-ad
          name="rotation"
          position="section_page"
          modifiers=["inter-block"]
        />
      </@section>
    </marko-web-page-wrapper>
  </@page>
</marko-web-default-page-layout>
